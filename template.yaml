AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: 'Quicksilver API - The API for avatar.jairtrejo.com'

Parameters:
  Stage:
    Type: String
    Description: Stage of this stack. Can be Dev or Prod.
    AllowedValues:
      - Dev
      - Prod
    Default: 'Dev'
  CorsDomain:
    Type: String
    Description: CORS authorized domain for this API
    Default: '*'
  DomainName:
    Type: String
    Description: Domain name for the API, e.g. api-avatar.jairtrejo.com
    Default: ''
  SSLCertificateArn:
    Type: String
    Description: Arn for an SSL certificate that covers the domain
    Default: ''
  HostedZoneId:
    Type: String
    Description: HostedZone to create record for the domain
    Default: ''
  AvatarBucketName:
    Type: String
    Description: Bucket name to store the avatar images
    Default: ''

Mappings:
  SecretsMap:
    Dev:
      HfToken: '{{resolve:ssm:/AvatarJairtrejo/Dev/HfToken:1}}'
      MastodonClientKey: '{{resolve:ssm:/AvatarJairtrejo/Dev/MastodonClientKey:1}}'
      MastodonClientSecret: '{{resolve:ssm:/AvatarJairtrejo/Dev/MastodonClientSecret:1}}'
      MastodonAccessToken: '{{resolve:ssm:/AvatarJairtrejo/Dev/MastodonAccessToken:1}}'
    Prod:
      HfToken: '{{resolve:ssm:/AvatarJairtrejo/Prod/HfToken:1}}'
      MastodonClientKey: '{{resolve:ssm:/AvatarJairtrejo/Prod/MastodonClientKey:1}}'
      MastodonClientSecret: '{{resolve:ssm:/AvatarJairtrejo/Prod/MastodonClientSecret:1}}'
      MastodonAccessToken: '{{resolve:ssm:/AvatarJairtrejo/Prod/MastodonAccessToken:1}}'

Conditions:
  ShouldMapDomain: !Not [ !Equals [ !Ref DomainName, "" ]]

Globals:
  Function:
    Timeout: 300
    Environment:
      Variables:
        DYNAMO_TABLE_NAME: !Ref PromptTable
        CORS_DOMAIN: !Ref CorsDomain
    Tags:
      Site: avatar.jairtrejo.com

Resources:
  Api:
    Type: 'AWS::Serverless::Api'
    Properties:
      StageName: Prod
      Cors:
        AllowOrigin: !Sub "'${CorsDomain}'"
        AllowHeaders: "'Authorization'"

  ApiDomainName:
    Type: 'AWS::ApiGateway::DomainName'
    Condition: ShouldMapDomain
    Properties:
      CertificateArn: !Ref SSLCertificateArn
      DomainName: !Ref DomainName

  ApiRedirectRecord:
    Type: 'AWS::Route53::RecordSet'
    Condition: ShouldMapDomain
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: api-avatar.jairtrejo.com
      Type: A
      AliasTarget:
        HostedZoneId: !GetAtt ApiDomainName.DistributionHostedZoneId
        DNSName: !GetAtt ApiDomainName.DistributionDomainName

  ApiBasePathMapping:
    Type: 'AWS::ApiGateway::BasePathMapping'
    Condition: ShouldMapDomain
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref Api
      Stage: !Ref Api.Stage

  PromptTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub "AvatarPrompt-${Stage}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: created_at
          AttributeType: N
        - AttributeName: used_at
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: created_at
          KeySchema:
            - AttributeName: id
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
        - IndexName: used_at
          KeySchema:
            - AttributeName: id
              KeyType: HASH
            - AttributeName: used_at
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Site
          Value: avatar.jairtrejo.com

  PromptQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      VisibilityTimeout: 60
      MessageRetentionPeriod: 900

  SavePromptFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: dist/
      Handler: quicksilver.save_prompt
      Runtime: python3.9
      Environment:
        Variables:
          CORS_DOMAIN: !Ref CorsDomain
      Events:
        SavePrompt:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /prompt
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PromptTable

  UpdatePictureFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: dist/
      Handler: quicksilver.update_picture
      Runtime: python3.9
      Timeout: 60
      Environment:
        Variables:
          AVATAR_BUCKET: !Ref AvatarBucketName
          HF_TOKEN: !FindInMap [SecretsMap, !Ref Stage, 'HfToken']
          MASTODON_CLIENT_KEY: !FindInMap [SecretsMap, !Ref Stage, 'MastodonClientKey']
          MASTODON_CLIENT_SECRET: !FindInMap [SecretsMap, !Ref Stage, 'MastodonClientSecret']
          MASTODON_ACCESS_TOKEN: !FindInMap [SecretsMap, !Ref Stage, 'MastodonAccessToken']
      Events:
        UpdatePicture:
          Type: SQS
          Properties:
            Queue: !GetAtt PromptQueue.Arn
            BatchSize: 1
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PromptTable
        - S3CrudPolicy:
            BucketName: !Ref AvatarBucketName

  PickPromptFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: dist/
      Handler: quicksilver.pick_prompt
      Runtime: python3.9
      Events:
        ScheduleEvent:
          Type: ScheduleV2
          Properties:
            Description: "Every day"
            ScheduleExpression: "cron(05 08 * * ? *)"
            ScheduleExpressionTimezone: "America/Los_Angeles"
      EventInvokeConfig:
        DestinationConfig:
          OnSuccess:
            Type: SQS
            Destination: !GetAtt PromptQueue.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref PromptTable

Outputs:
  ApiEndpoint:
    Description: "API Gateway endpoint"
    Value: !Sub "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
